apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.fastdev.ton"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }//解决AndroidStudio3.0 注解报错
        multiDexEnabled true

        ndk {
            //https://www.jianshu.com/p/fee82949ff84
            //如果适配版本高于4.1版本，可以直接像我上面这样写，当然，如果armeabi-v7a不是设备主要ABI，那么会在性能上造成一定的影响。
            //如果项目只包含了 armeabi，那么在所有Android设备都可以运行；
            //如果项目只包含了 armeabi-v7a，除armeabi架构的设备外都可以运行；
            //如果项目只包含了 x86，那么armeabi架构和armeabi-v7a的Android设备是无法运行的；
            //如果同时包含了 armeabi,armeabi-v7a和x86，所有设备都可以运行，程序在运行的时候去加载不同平台对应的so，这是较为完美的一种解决方案，同时也会导致包变大。
            //所有的x86/x86_64/armeabi-v7a/arm64-v8a设备都支持armeabi架构的.so文件，因此似乎移除其他ABIs的.so文件是一个减少APK大小的好技巧。但事实上并不是：这不只影响到函数库的性能和兼容性。
            abiFilters "armeabi","armeabi-v7a"/*, "x86", "arm64-v8a", "x86_64", */
        }
    }
    //配置调用aar
    repositories {
        flatDir { dirs 'libs' }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    buildTypes {
        debug {
            //是否打印LOG true-false
            buildConfigField "Boolean", "isLog", "true"
            //是否开启开发工具
            buildConfigField "Boolean", "isDevelopTool", "true"
            //服务器地址
            buildConfigField "String", "HOST1", rootProject.ext.host.HOST1_TEST//常量-当前服务器地址
            buildConfigField "String", "HOST1_DEVE", rootProject.ext.host.HOST1_DEVE//常量-开发服务网地址
            buildConfigField "String", "HOST1_TEST", rootProject.ext.host.HOST1_TEST//常量-测试服务网地址
            buildConfigField "String", "HOST1_RELEASE_PRE", rootProject.ext.host.HOST1_RELEASE_PRE//常量-预发布服务网地址
            buildConfigField "String", "HOST1_RELEASE", rootProject.ext.host.HOST1_RELEASE//常量-正式服服务网地址

            debuggable true
            minifyEnabled false //minifyEnabled主要用来控制是否运行混淆的。
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            //是否打印LOG true-false
            buildConfigField "Boolean", "isLog", "true"
            //是否开启开发工具
            buildConfigField "Boolean", "isDevelopTool", "false"
            //服务器地址
            buildConfigField "String", "HOST1", rootProject.ext.host.HOST1_RELEASE//常量-当前服务器地址
            buildConfigField "String", "HOST1_DEVE", rootProject.ext.host.HOST1_DEVE//常量-开发服务网地址
            buildConfigField "String", "HOST1_TEST", rootProject.ext.host.HOST1_TEST//常量-测试服务网地址
            buildConfigField "String", "HOST1_RELEASE_PRE", rootProject.ext.host.HOST1_RELEASE_PRE//常量-预发布服务网地址
            buildConfigField "String", "HOST1_RELEASE", rootProject.ext.host.HOST1_RELEASE//常量-正式服服务网地址

            debuggable false
            minifyEnabled false //minifyEnabled主要用来控制是否运行混淆的。
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //查看依赖的库结构命令：gradlew -q app:dependencies
    configurations.all {
        //剔除工程中所有的该依赖
        all*.exclude group: 'com.android.support'
        resolutionStrategy {
            force 'com.google.code.gson:gson:2.8.5'  //强制使用版本
            force 'androidx.appcompat:appcompat:1.0.2'  //强制使用版本
//            failOnVersionConflict() //版本冲突时报错
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.supprotLibs

    implementation(name: 'socialgo-core-1.0.2', ext: 'aar')
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.3.1'
    implementation(name: 'socialgo-wechat-1.0.2', ext: 'aar')

    implementation project(path: ':baselib')
    //控件id注入库
    implementation rootProject.ext.butterknifeLibs
//    implementation rootProject.ext.fastDev.title
}
